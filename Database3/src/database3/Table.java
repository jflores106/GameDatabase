/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package database3;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author janet
 */
public class Table extends javax.swing.JFrame {

    /**
     * Creates new form Table
     */
    public Table() {
        initComponents();
    }
    
    String query; 
    public Table(String par){
        initComponents();
        this.query = par;
       DisplayTable();
}
    
    private void DisplayTable()
    {
        try{
        Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/VideoGames","root","Janet1997");
        Statement stmt = con.createStatement();

        int q = Integer.parseInt(query);
        if(q == 1)
        {    
            ResultSet queryOne = stmt.executeQuery("Select title AS Game, genre from Game AS G, Platform AS P, Released_On AS R where G.GID = R.GID AND R.PID = P.PID AND P.platformName = 'PC' order by title ASC;"); 
            t1.setModel(DbUtils.resultSetToTableModel(queryOne));
        }
        if (q == 2)
        {
           ResultSet queryTwo = stmt.executeQuery("Select title AS Game from Game AS G, Released_On AS R, Platform AS P where G.GID = R.GID AND R.PID = P.PID AND P.platformName = 'PlayStation' AND P.generation = '4' AND title NOT IN (Select title from Game AS G, Released_On AS R, Platform AS P where G.GID = R.GID AND R.PID = P.PID AND P.platformName = 'Xbox' AND P.generation = 'One');");
           t1.setModel(DbUtils.resultSetToTableModel(queryTwo));
        }
        if (q == 3)
        {
            ResultSet queryThree = stmt.executeQuery("Select releaseDate, platformName, generation from Game AS G, Released_On AS R, Platform AS P where G.GID = R.GID AND R.PID = P.PID AND title = 'The Elder Scrolls V: Skyrim';");
           t1.setModel(DbUtils.resultSetToTableModel(queryThree));
        }
        if (q == 4)
        {
            ResultSet queryFour = stmt.executeQuery("Select G.title AS Game, S.devName AS DeveloperStudio from Developed_By AS D, DeveloperStudio AS S, Game AS G, Released_On AS R, Platform AS P where S.DID = D.DID AND D.GID = G.GID AND D.GID = R.GID AND P.PID = R.PID AND YEAR(R.releaseDate) = 2020 AND P.platformName = 'Xbox' AND P.generation = 'One';");
           t1.setModel(DbUtils.resultSetToTableModel(queryFour));
        }
        if (q == 5)
        {
            ResultSet queryFive = stmt.executeQuery("Select P.platformName, P.generation, COUNT(R.GID) AS GameCounter from Platform AS P, Released_On AS R where R.PID = P.PID group by R.PID;");
           t1.setModel(DbUtils.resultSetToTableModel(queryFive));
        }
        if (q == 6)
        {
            ResultSet querySix = stmt.executeQuery("Select title AS Game, banReason from Country AS C, Banned_In AS B, Game AS G where C.CID = B.CID AND B.GID = G.GID AND countryName = 'Australia';"); 
           t1.setModel(DbUtils.resultSetToTableModel(querySix));
        }
        if (q == 7)
        {
            ResultSet querySeven = stmt.executeQuery("Select title AS Game from Platform AS P, Released_On AS R, Game AS G where P.PID = R.PID AND R.GID = G.GID AND P.platformName = 'Xbox' AND P.generation = 'One' AND title IN (Select title from Platform AS P, Released_On AS R, Game AS G where P.PID = R.PID AND R.GID = G.GID AND P.platformName = 'PlayStation' AND P.generation = '4');"); 
           t1.setModel(DbUtils.resultSetToTableModel(querySeven));
        }
        if (q == 8)
        {
            ResultSet queryE = stmt.executeQuery("Select countryName, COUNT(G.GID) AS BannedGames from Country AS C, Banned_In AS B, Game AS G where C.CID = B.CID AND B.GID = G.GID group by B.CID;"); 
           t1.setModel(DbUtils.resultSetToTableModel(queryE));
        }
        }catch(Exception e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        t1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Query Results");

        t1.setBackground(new java.awt.Color(232, 242, 248));
        t1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        t1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        t1.setGridColor(new java.awt.Color(218, 229, 245));
        jScrollPane1.setViewportView(t1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 885, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Table.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Table().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable t1;
    // End of variables declaration//GEN-END:variables
}
